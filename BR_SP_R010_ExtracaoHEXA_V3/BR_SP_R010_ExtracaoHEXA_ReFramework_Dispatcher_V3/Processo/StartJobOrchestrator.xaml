<Activity mc:Ignorable="sap sap2010" x:Class="StartJobOrchestrator" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ProcessName" Type="InArgument(x:String)" />
    <x:Property Name="in_UserName" Type="InArgument(x:String)" />
    <x:Property Name="in_RuntimeType" Type="InArgument(x:String)" />
    <x:Property Name="out_StatusCodeStartJob" Type="OutArgument(x:Int32)" />
    <x:Property Name="in_MaximumDuration" Type="InArgument(x:TimeSpan)" />
    <x:Property Name="in_DurationOffset" Type="InArgument(x:TimeSpan)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>711,280</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>StartJobOrchestrator_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="44">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>Microsoft.Activities.Expressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="48">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="242,215" sap2010:WorkflowViewState.IdRef="Sequence_6">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence sap2010:Annotation.AnnotationText="Getting the required data &amp; performing the POST Job Request" DisplayName="StartJobOrchestrator" sap:VirtualizedContainerService.HintSize="605,2572" sap2010:WorkflowViewState.IdRef="Sequence_1">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="OrchestratorResponse" />
        <Variable x:TypeArguments="njl:JObject" Name="JsonResponseObj" />
        <Variable x:TypeArguments="x:String" Name="RobotID" />
        <Variable x:TypeArguments="x:String" Name="ProcessKey" />
        <Variable x:TypeArguments="njl:JArray" Name="processArray" />
        <Variable x:TypeArguments="x:String" Name="jsonPayload" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="Getting the ProcessKey using the given process name" DisplayName="Get ProcessKey" sap:VirtualizedContainerService.HintSize="563,108" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Int32" Name="StatusCodeGetReleases" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:RetryScope ContinueOnError="True" DisplayName="Retry Scope - Get Releases" sap:VirtualizedContainerService.HintSize="484,203" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3" RetryInterval="00:00:03">
          <ui:RetryScope.ActivityBody>
            <ActivityAction>
              <ui:OrchestratorHttpRequest JSONPayload="{x:Null}" ResponseHeaders="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Orchestrator Get Releases" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_1" Method="GET" RelativeEndpoint="[&quot;/odata/Releases?$top=100&amp;$filter= Name eq  '&quot; + in_ProcessName +&quot;'&quot;]" Result="[OrchestratorResponse]" StatusCode="[StatusCodeGetReleases]" />
            </ActivityAction>
          </ui:RetryScope.ActivityBody>
          <ui:RetryScope.Condition>
            <ActivityFunc x:TypeArguments="x:Boolean">
              <p:IsTrue DisplayName="Is true Status = 200" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="IsTrue_1" Input="[StatusCodeGetReleases  = 200]" />
            </ActivityFunc>
          </ui:RetryScope.Condition>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:RetryScope>
        <If Condition="[StatusCodeGetReleases &lt;&gt; 200]" DisplayName="If StatusCodeGetReleases&lt;&gt; 200" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Throw DisplayName="Throw status &lt;&gt; 200" Exception="[new SystemException(&quot;Orchestrator was NOT able to retrieve the ProcessKey successfully. Because of this, the Performer process hasn't started.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
          </If.Then>
        </If>
        <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize Orchestrator Response ProcessKey" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[JsonResponseObj]" JsonString="[OrchestratorResponse]" />
        <ui:DeserializeJsonArray DisplayName="Deserialize Response Releases Array ProcessKey" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="DeserializeJsonArray_1" JsonArray="[processArray]" JsonString="[JsonResponseObj(&quot;value&quot;).ToString]" />
        <Assign DisplayName="Get Process Key" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[ProcessKey]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[processArray(0)("Key").ToString]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <Sequence sap2010:Annotation.AnnotationText="Get the Robot ID for a Specifric User in order to be able to run the Job on that User" DisplayName="Get RobotID for Specific User" sap:VirtualizedContainerService.HintSize="563,1136" sap2010:WorkflowViewState.IdRef="Sequence_4">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="OrchestratorResponseRobot" />
          <Variable x:TypeArguments="njl:JArray" Name="robotArray" />
          <Variable x:TypeArguments="x:Int32" Name="StatusCodeGetRobotID" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:RetryScope ContinueOnError="True" DisplayName="Retry Scope - Get RobotID" sap:VirtualizedContainerService.HintSize="484,203" sap2010:WorkflowViewState.IdRef="RetryScope_2" NumberOfRetries="3" RetryInterval="00:00:03">
          <ui:RetryScope.ActivityBody>
            <ActivityAction>
              <ui:OrchestratorHttpRequest JSONPayload="{x:Null}" ResponseHeaders="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Orchestrator HTTP Request" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_3" Method="GET" RelativeEndpoint="[&quot;/odata/Users?$top=100&amp;$filter= UserName eq  '&quot; + in_UserName +&quot;'&quot;]" Result="[OrchestratorResponseRobot]" StatusCode="[StatusCodeGetRobotID]" />
            </ActivityAction>
          </ui:RetryScope.ActivityBody>
          <ui:RetryScope.Condition>
            <ActivityFunc x:TypeArguments="x:Boolean">
              <p:IsTrue DisplayName="Is true Status = 200" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="IsTrue_2" Input="[StatusCodeGetRobotID = 200]" />
            </ActivityFunc>
          </ui:RetryScope.Condition>
        </ui:RetryScope>
        <If Condition="[StatusCodeGetRobotID &lt;&gt; 200]" DisplayName="If StatusCodeGetRobotID&lt;&gt; 200" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_2">
          <If.Then>
            <Throw DisplayName="Throw status &lt;&gt; 200" Exception="[new SystemException(&quot;Orchestrator was NOT able to retrieve the Robot ID successfully. Because of this, the Performer process hasn't started.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
          </If.Then>
        </If>
        <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize Orchestrator Response SpecificUser" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[JsonResponseObj]" JsonString="[OrchestratorResponseRobot]" />
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Message="[&quot;GetRobotID Response: &quot;  + OrchestratorResponseRobot]" />
        <ui:DeserializeJsonArray DisplayName="Deserialize Response Releases Array SpecificUser" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="DeserializeJsonArray_2" JsonArray="[robotArray]" JsonString="[JsonResponseObj(&quot;value&quot;).ToString]" />
        <Assign DisplayName="Get Process Key" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_3">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[RobotID]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[robotArray(0)("UnattendedRobot")("RobotId").ToString]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Message="[&quot;Deserialized RobotID: &quot; + RobotID]" />
      </Sequence>
      <Sequence sap2010:Annotation.AnnotationText="Posting the Job using the arguments from the called UI and data colected from Orchestrator" DisplayName="Start Job" sap:VirtualizedContainerService.HintSize="563,1125" sap2010:WorkflowViewState.IdRef="Sequence_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Create the JSON Payload for the Request" sap:VirtualizedContainerService.HintSize="521,64" sap2010:WorkflowViewState.IdRef="Assign_2">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[jsonPayload]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String" xml:space="preserve">["{'startInfo':" + "{ 'ReleaseKey': '" + ProcessKey + "'," +
     "'Strategy': 'ModernJobsCount'," +
	  "'RuntimeType': '"+in_RuntimeType +"'," +
     "'RobotIds': [" +RobotID+"]," +
     "'JobsCount': 1," +
	 " 'InputArguments':" + """{ 'in_MaximumDuration': '" + in_MaximumDuration.ToString + "', 'in_DurationOffset': '" + in_DurationOffset.ToString +"'}""" +
      "} }"]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:RetryScope ContinueOnError="True" DisplayName="Retry Scope - Start Job" sap:VirtualizedContainerService.HintSize="521,203" sap2010:WorkflowViewState.IdRef="RetryScope_3" NumberOfRetries="3" RetryInterval="00:00:03">
          <ui:RetryScope.ActivityBody>
            <ActivityAction>
              <ui:OrchestratorHttpRequest ResponseHeaders="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Orchestrator Start Job" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_2" JSONPayload="[jsonPayload]" Method="POST" RelativeEndpoint="/odata/Jobs/UiPath.Server.Configuration.OData.StartJobs" Result="[OrchestratorResponse]" StatusCode="[out_StatusCodeStartJob]" />
            </ActivityAction>
          </ui:RetryScope.ActivityBody>
          <ui:RetryScope.Condition>
            <ActivityFunc x:TypeArguments="x:Boolean">
              <p:IsTrue DisplayName="Is true Status = 201" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="IsTrue_3" Input="[out_StatusCodeStartJob = 201]" />
            </ActivityFunc>
          </ui:RetryScope.Condition>
        </ui:RetryScope>
        <If Condition="[out_StatusCodeStartJob &lt;&gt; 201]" DisplayName="If out_StatusCodeStartJob&lt;&gt; 201" sap:VirtualizedContainerService.HintSize="521,393" sap2010:WorkflowViewState.IdRef="If_3">
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Error" Message="[OrchestratorResponse]" />
              <Throw DisplayName="Throw status &lt;&gt; 201" Exception="[new SystemException(&quot;Orchestrator was NOT able to start the Performer process successfully. StatusCode = &quot; + out_StatusCodeStartJob.Tostring)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
            </Sequence>
          </If.Then>
        </If>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="521,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;StartJob Request Status: &quot; + out_StatusCodeStartJob.ToString]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:LogMessage>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="521,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;StartJob Response: &quot; + OrchestratorResponse]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:LogMessage>
      </Sequence>
    </Sequence>
  </Sequence>
</Activity>